     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 01                          a db 1
    14 00000001 02                      	b db 2
    15 00000002 03                      	c db 3
    16 00000003 04                      	d db 4
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                      ; exercitiul 3
    22                                      ; (c + d) - (a + d) + b    a,b,c,d-byte
    23 00000000 B800000000                  mov eax,0
    24 00000005 BB00000000              	mov ebx,0
    25                                  	;(c + d)
    26 0000000A A0[02000000]            	mov al,[c]
    27 0000000F 0205[03000000]          	add al,[d]
    28                                  	; al = (c + d)
    29                                  	;(a + d)
    30 00000015 8A1D[00000000]          	mov bl,[a]
    31 0000001B 021D[03000000]          	add bl,[d]
    32                                  	; bl = (a + d)
    33                                  	; (c + d) - (a + d)
    34 00000021 28D8                    	sub al,bl
    35                                  	; al =  (c + d) - (a + d)
    36                                  	; (c + d) - (a + d) + b
    37 00000023 0205[01000000]          	add al,[b]
    38                                  	; al = (c + d) - (a + d) + b
    39                                      
    40                                          ; exit(0)
    41 00000029 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000002B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
