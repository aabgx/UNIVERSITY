%{
#include <string.h>
#include "attrib.h"
#include "analyzer.tab.h"  // Include the parser header file generated by Bison
%}

%option noyywrap
%option yylineno

%%
#include 	{ return INCLUDE; }
"<" 		{ return LESS_SEP; }
">" 		{ return GT_SEP; }
iostream 	{ return IOSTREAM; }
using 		{ return USING; }
namespace 	{ return NAMESPACE; }
std 		{ return STD; }
int 		{ return INT; }		
main 		{ return MAIN; }
return 		{ return RETURN; }
cin  		{ return CIN; }
cout 		{ return COUT; }
">>" 		{ return CIN_OPERATOR; }
"<<" 		{ return COUT_OPERATOR; }
endl 		{ return ENDL; }

[a-zA-Z]([a-zA-Z]|[0-9]|_)* { 
		if(yyleng > 10){
			printf("Unrecognized token at line %d: %s\n", yylineno, yytext);
			return -1;
		}
		else {
			strcpy(yylval.varname, yytext); 
			return ID; 
		}
}

[+*\-/%] 	{ strcpy(yylval.str, yytext); return ARITHMETIC_OPERATOR; }
"0" 		{ return ZERO; }

[1-9][0-9]*([\.][0-9]+)?|0[\.][0-9][0-9]* { strcpy(yylval.varname, yytext); return POSITIVE; }

"(" 	  	{ return OPEN_PAR; }
")"		{ return CLOSED_PAR; }
"{" 	  	{ return OPEN_BRACK; }
"}"		{ return CLOSED_BRACK; }
[=]       	{ return EQ; }
";"		{ return SEMICOLON; }
","		{ return COMMA; }
"\n"      	{ /*Nothing*/}
[ \t]     	{}
.         	{ printf("Not recognized: %s\n", yytext); return -1; /* Ignore other characters */ }
%%